version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: pgvector/pgvector:pg16
    container_name: ai-trpg-postgres-dev
    environment:
      POSTGRES_DB: aitrpg_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/scripts/init-extensions.sql:/docker-entrypoint-initdb.d/init-extensions.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d aitrpg_dev"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - ai-trpg-network

  # Redis Cache (Optional)
  redis:
    image: redis:7-alpine
    container_name: ai-trpg-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - ai-trpg-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: dependencies  # Use dependencies stage for development
    container_name: ai-trpg-backend-dev
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/aitrpg_dev
      REDIS_URL: redis://redis:6379
      JWT_SECRET: dev-jwt-secret-change-in-production
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      CORS_ORIGIN: http://localhost:3001
      PORT: 3000
    ports:
      - "3000:3000"
    volumes:
      # Mount source code for development
      - ./backend/src:/app/src
      - ./backend/prisma:/app/prisma
      - ./backend/package.json:/app/package.json
      - ./backend/tsconfig.json:/app/tsconfig.json
      - backend_node_modules:/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: npm run dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - ai-trpg-network

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: dependencies  # Use dependencies stage for development
      args:
        VITE_API_URL: http://localhost:3000/api
        VITE_WS_URL: ws://localhost:3000
    container_name: ai-trpg-frontend-dev
    environment:
      VITE_API_URL: http://localhost:3000/api
      VITE_WS_URL: ws://localhost:3000
    ports:
      - "3001:5173"  # Vite dev server default port
    volumes:
      # Mount source code for development
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/index.html:/app/index.html
      - ./frontend/package.json:/app/package.json
      - ./frontend/vite.config.ts:/app/vite.config.ts
      - ./frontend/tsconfig.json:/app/tsconfig.json
      - frontend_node_modules:/app/node_modules
    depends_on:
      - backend
    command: npm run dev -- --host 0.0.0.0 --port 5173
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - ai-trpg-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  backend_node_modules:
    driver: local
  frontend_node_modules:
    driver: local

networks:
  ai-trpg-network:
    driver: bridge